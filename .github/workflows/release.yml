name: goreleaser

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: '选择发布类型'
        required: true
        type: choice
        options:
          - build-only
          - release
          - prerelease
        default: 'build-only'
      version:
        description: '发布版本 (仅在选择 release 或 prerelease 时需要，格式如 v1.0.0-rc1)'
        required: false
        type: string
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
      
      - name: Set Release Version
        if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.release_type == 'release' || github.event.inputs.release_type == 'prerelease') }}
        run: |
          if [[ ! -z "${{ github.event.inputs.version }}" ]]; then
            # Validate version format (vX.Y.Z or vX.Y.Z-rcN)
            if [[ ! "${{ github.event.inputs.version }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?$ ]]; then
              echo "Error: Version must follow semantic versioning format (vX.Y.Z or vX.Y.Z-rcN)"
              exit 1
            fi
            # 确保版本标签格式严格正确
            if [[ "${{ github.event.inputs.version }}" =~ \.\. ]] || [[ "${{ github.event.inputs.version }}" =~ \.$ ]]; then
              echo "Error: Version tag contains invalid dots (consecutive or trailing)"
              exit 1
            fi
            if git rev-parse "${{ github.event.inputs.version }}" >/dev/null 2>&1; then
              echo "Warning: Tag ${{ github.event.inputs.version }} already exists. Skipping tag creation."
            else
              git tag -a ${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
              git push origin ${{ github.event.inputs.version }}
            fi
          else
            echo "Error: Version is required for release/prerelease mode"
            exit 1
          fi

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: v2.8.1  # 更新为 v2.8.1，确保支持配置文件 version: 2
          args: >-
            ${{ github.event.inputs.release_type == 'build-only' && 'build --snapshot' ||
            'release --clean' }}
          workdir: gin-frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
